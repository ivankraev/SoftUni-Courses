class Story {
    constructor(title, creator) {
        this.title = title;
        this.creator = creator;
        this._comments = [];
        this._likes = [];
    }

    get likes() {
        return this._likes.length == 0 ? `${this.title} has 0 likes`
            : this._likes.length == 1 ? `${this._likes[0]} likes this story!`
                : `${this._likes[0]} and ${this._likes.length - 1} others like this story!`
    }

    like(username) {
        if (this._likes.includes(username)) {
            throw new Error("You can't like the same story twice!");
        }
        else if (username === this.creator) {
            throw new Error("You can't like your own story!");
        }
        else {
            this._likes.push(username);
            return `${username} liked ${this.title}!`

        }
    }

    dislike(username) {
        if (!this._likes.includes(username)) {
            throw new Error("You can't dislike this story!");
        }

        return `${username} disliked ${this.title}`

    }

    comment(username, content, id) {
        if (id === undefined || !this._comments.some(c => c.Id === id)) {
            let newComment = {
                Id: this._comments.length + 1,
                Username: username,
                Content: content,
                Replies: [],
            }
            this._comments.push(newComment);
            return `${username} commented on ${this.title}`
        }


    }




}
