function solve(input) {
    input = input[0];
    let hiddenPairsPattern = /(#|@)(?<firstPair>[A-Za-z]{3,})\1\1(?<secondPair>[A-Za-z]{3,})\1/gm;
    let match = hiddenPairsPattern.exec(input);
    let result = [];
    let matchFound = false;
    let validPairsCounter = 0;
    let mirrorPairsFound = false;
    while (match != null) {
        validPairsCounter++;
        let firstWord = match.groups.firstPair;
        let secondWord = match.groups.secondPair;
        let reversed = secondWord.split('').reverse().join('');
        matchFound = true;
        if (firstWord == reversed) {
            result.push(`${firstWord} <=> ${secondWord}`);
            mirrorPairsFound = true;
        }
        match = hiddenPairsPattern.exec(input);
    }
    if (matchFound == false) {
        console.log(`No word pairs found!`);
    }
    else if (matchFound == true) {
        console.log(`${validPairsCounter} word pairs found!`);
    }
    if (mirrorPairsFound == false) {
        console.log(`No mirror words!`);
    }
    else if (mirrorPairsFound == true) {
        console.log(`The mirror words are:`);
        console.log(result.join(', '));
    }
}